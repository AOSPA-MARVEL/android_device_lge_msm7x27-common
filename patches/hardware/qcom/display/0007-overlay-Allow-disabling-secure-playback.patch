From adc9c3e02b31ef1e378e9868663c69a43a9fda24 Mon Sep 17 00:00:00 2001
From: Ricardo Cerqueira <cyanogenmod@cerqueira.org>
Date: Mon, 3 Dec 2012 20:43:58 +0200
Subject: [PATCH] overlay: Allow disabling secure playback

If the device's kernel isn't fully prepared for secure content
playback, having the secure field in the msm_rotator_img_info
struct will cause issues while playing out video.

The correct set of patches to the kernel (MDP, maybe vidc) needs
to be figured out for this to be enabled; to disable it,
add QCOM_NO_SECURE_PLAYBACK to the device's CFLAGS. (and remove
"secure" from msm_rotator_img_info)

Change-Id: I73c7cc9bdeb0f4357645b8bdf06403309de0ad34
---
 liboverlay/mdpRotator.cpp |    9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/liboverlay/mdpRotator.cpp b/liboverlay/mdpRotator.cpp
index 8a92d6d..54bfd17 100644
--- a/liboverlay/mdpRotator.cpp
+++ b/liboverlay/mdpRotator.cpp
@@ -56,9 +56,11 @@ void MdpRot::setSource(const overlay::utils::Whf& awhf) {
 }
 
 void MdpRot::setFlags(const utils::eMdpFlags& flags) {
+#ifndef QCOM_NO_SECURE_PLAYBACK
     mRotImgInfo.secure = 0;
     if(flags & utils::OV_MDP_SECURE_OVERLAY_SESSION)
         mRotImgInfo.secure = 1;
+#endif
 }
 
 void MdpRot::setTransform(const utils::eTransform& rot, const bool& rotUsed)
@@ -98,10 +100,15 @@ bool MdpRot::commit() {
 bool MdpRot::open_i(uint32_t numbufs, uint32_t bufsz)
 {
     OvMem mem;
+    int secureFlag = 0;
 
     OVASSERT(MAP_FAILED == mem.addr(), "MAP failed in open_i");
 
-    if(!mem.open(numbufs, bufsz, mRotImgInfo.secure)){
+#ifndef QCOM_NO_SECURE_PLAYBACK
+    secureFlag = mRotImgInfo.secure;
+#endif
+
+    if(!mem.open(numbufs, bufsz, secureFlag)){
         ALOGE("%s: Failed to open", __func__);
         mem.close();
         return false;
-- 
1.7.10.4

